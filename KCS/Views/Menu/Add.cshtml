@using KCS.Models
@model Menu

@{
    ViewBag.Title = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Add", "Menu", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="box box-primary">
            <div class="box-header"></div>
            <div class="box-body">
                <div class="message-box"></div>

                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.MenuText, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MenuText, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuText, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.MenuTargetPage, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MenuTargetPage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuTargetPage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ParentMenuId, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownList("ParentMenuId", ViewBag.ParentMenu as SelectList, "Select parent menu.", new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.ParentMenuId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ActiveStatus, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.RadioButton("ActiveStatus", true, true, new { @id = "Active" }) @Html.Label("Active")
                            @Html.Raw("&nbsp;&nbsp;")
                            @Html.RadioButton("ActiveStatus", false, false, new { @id = "Inactive" }) @Html.Label("Inactive")
                        </div>
                    </div>
                </div>


            </div>
        </div>

        <div class="row text-center">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="submit" value="Insert" class="btn btn-success btn-flat"><i class="fa fa-save"></i>&nbsp; Save</button>
                    <a href="@Url.Action("Index", "Menu")" value="Cancel" class="btn btn-primary btn-flat"><i class="fa fa-ban"></i>&nbsp; Cancel</a>
                </div>
            </div>
        </div>
    </div>
}


@section ProjectScripts {
    <script type="text/javascript">
        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

        })
    </script>
}