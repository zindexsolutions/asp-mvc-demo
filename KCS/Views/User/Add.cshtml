@using KCS.Models
@model User

@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Add", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="box box-primary">
            <div class="box-header"></div>
            <div class="box-body">
                <div class="message-box"></div>
                <div class="row">
                    <div class="col-md-9">
                        <div class="row">

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.StartDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @id = "StartDate" } })
                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.EndDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @id = "EndDate" } })
                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.Label("Role", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.DropDownList("RoleId", ViewBag.Role as SelectList, "Please select role.", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.ActiveStatus, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">

                                    @Html.RadioButton("ActiveStatus", true, true, new { @id = "Active" }) @Html.Label("Active")
                                    @Html.RadioButton("ActiveStatus", false, false, new { @id = "Inactive" }) @Html.Label("Inactive")


                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="row">
                            <div class="image-preview">


                                <img src="~/Content/Image/default-image.png" class="image-user-profile img-circle img-responsive" alt="Image Not Found" id="UserProfileImage" name="UserProfileImage" />


                                <a href="javascript:void(0)" class="remove-btn" id="RemoveImage"><i class="fa fa-times"></i></a>
                            </div>
                        </div>
                        <div class="row text-center">
                            <div class="form-group">
                                <div class="btn btn-default btn-file">
                                    <i class="fa fa-user"></i>&nbsp;&nbsp;Upload
                                    <input type="file" name="ProfilePicturePath" id="ProfilePicturePath">
                                </div>
                            </div>


                            @*<div class="col-md-6 form-group">
                                    <div class="btn btn-default btn-file">
                                        <i class="fa fa-times"></i>
                                        <a href="javascript:void(0)" id="RemoveImage"> Remove</a>
                                    </div>
                                </div>*@
                        </div>
                    </div>

                </div>
            </div>


        </div>

        <div class="row  text-center">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="submit" value="Insert" class="btn btn-success btn-flat"><i class="fa fa-save"></i>&nbsp; Save</button>
                    <a href="@Url.Action("Index", "User")" value="Cancel" class="btn btn-primary btn-flat"><i class="fa fa-ban"></i>&nbsp; Cancel</a>
                </div>
            </div>
        </div>
    </div>
}

@section ProjectScripts {
    <script>

        $(function () {

            $("#ProfilePicturePath").change(function () {
                readURL(this);
            });

            //Date picker
            $('#StartDate').datepicker({
                autoclose: true,
                format: 'dd/mm/yyyy'
            });

            $('#EndDate').datepicker({
                autoclose: true,
                format: 'dd/mm/yyyy'
            });

            $("#RemoveImage").click(function () {
                remove_profile_picture();
            });
        });

        function remove_profile_picture() {
            $("#RemoveImage").val('');
            $('#UserProfileImage').attr('src', '/Content/Image/default-image.png');

            $('#RemoveImage').hide();

        }



        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {

                    $('#UserProfileImage').attr('src', e.target.result);
                    $('#RemoveImage').show();
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}